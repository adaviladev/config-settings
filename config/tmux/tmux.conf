set -g default-terminal "tmux-256color"
set -sa terminal-overrides "*:Tc"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on
set -g status-position top

unbind-key C-b
set-option -g prefix C-Space             # GNU-Screen compatible prefix
bind-key C-Space send-prefix

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
set -q -g utf8
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n "~/.config/tmux/tmux.conf.local" "EDITOR=\${EDITOR//mvim/vim} && EDITOR=\${EDITOR//gvim/vim} && \${EDITOR:-vim} ~/.config/tmux/tmux.conf.local && tmux source ~/.config/tmux/tmux.conf && tmux display \"~/.config/tmux/tmux.conf sourced\""

# reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'

# Session Management
bind . if-shell '[ $(tmux has-session -t "Plugins") -eq 0 ]' {
  # comment
  attach -t "Dotfiles"
} {
  # comment
  run-shell "load dots"
}
bind y if-shell '[ $(tmux has-session -t "Notes") -eq 0 ]' {
  # comment
  attach -t "Notes"
} {
  # comment
  run-shell "load notes"
}
bind u if-shell '[ $(tmux has-session -t "Loop Returns") -eq 0 ]' {
  # comment
  attach -t "Loop Returns"
} {
  # comment
  run-shell "load loop"
}
bind i if-shell '[ $(tmux has-session -t "Plugins") -eq 0 ]' {
  # comment
  attach -t "Plugins"
} {
  # comment
  run-shell "load plugins"
}
bind o if-shell '[ $(tmux has-session -t "QMK Firmware") -eq 0 ]' {
  # comment
  attach -t "QMK Firmware"
} {
  # comment
  run-shell "load qmk"
}
bind q kill-session

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

set -g detach-on-destroy off

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'C-v' send -X begin-selection
bind-key -T copy-mode-vi 'C-y' send -X copy-selection

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# activity
set -g monitor-activity off
set -g visual-activity off

# List of plugins
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'erikw/tmux-powerline'
set -g @plugin '27medkamal/tmux-session-wizard'
set -g @session-wizard-width 40

set -g @plugin 'catppuccin/tmux'

set -g @catppuccin_flavour 'mocha'
set -g @catppuccin_date_time '%Y-%m-%d %H:%M'
set -g @catppuccin_powerline_icons_theme_enabled on
set -g @catppuccin_window_left_separator ''
set -g @catppuccin_window_middle_separator ' | '
set -g @catppuccin_window_right_separator ' '
set -g @catppuccin_window_number_position 'right'
set -g @catppuccin_window_default_fill 'all'
set -g @catppuccin_window_current_fill 'all'
set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_default_text '#W'
set -g @catppuccin_window_current_text '#W'

set -g @catppuccin_icon_window_current '󰖯'
set -g @catppuccin_status_modules_left 'session'
set -g @catppuccin_session_text "#S"

# set -g @catppuccin_status_fill 'all'
set -g @catppuccin_status_left_separator ''
set -g @catppuccin_status_right_separator ' '
set -g @catppuccin_status_right_separator_inverse 'no'
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_status_fill 'all'
set -g @catppuccin_status_modules_right 'directory date_time'
set -g @catppuccin_directory_text '#{b:pane_current_path}'

set -g @plugin 'tmux-plugins/tpm'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
