-- vim.api.nvim_create_augroup("VerticallyCenterWhileInserting", { clear = true })
-- vim.api.nvim_create_autocmd("InsertEnter", {
--   desc = "Keep the current line vertically centered while in insert mode", -- nice description
--   pattern = "*", -- the pattern si the name of our User autocommand events
--   group = "VerticallyCenterWhileInserting", -- add the autocmd to the newly created augroup
--   callback = function()
--     vim.cmd("norm zz")
--   end,
-- })
-- vim.api.nvim_create_autocmd("InsertLeave", {
--   desc = "Revert the scrolloff setting when exiting insert mode", -- nice description
--   pattern = "*", -- the pattern si the name of our User autocommand events
--   group = "VerticallyCenterWhileInserting", -- add the autocmd to the newly created augroup
--   callback = function()
--     vim.opt.scrolloff = 8
--   end,
-- })
-- vim.api.nvim_create_autocmd("VimEnter", {
--   callback = function()
--     local resession = require('resession')
--     local function get_session_name()
--       local name = vim.fn.getcwd()
--       local branch = vim.trim(vim.fn.system("git branch --show-current"))
--       if vim.v.shell_error == 0 then
--         return name .. branch
--       else
--         return name
--       end
--     end
--     -- Only load the session if nvim was started with no args
--     if vim.fn.argc(-1) == 0 then
--       resession.load(get_session_name(), { dir = "dirsession", silence_errors = true })
--     end
--   end,
-- })
-- vim.api.nvim_create_autocmd("VimLeavePre", {
--   callback = function()
--     local resession = require('resession')
--     local function get_session_name()
--       local name = vim.fn.getcwd()
--       local branch = vim.trim(vim.fn.system("git branch --show-current"))
--       if vim.v.shell_error == 0 then
--         return name .. branch
--       else
--         return name
--       end
--     end
--     resession.save(get_session_name(), { dir = "dirsession", notify = false })
--   end,
-- })
--
